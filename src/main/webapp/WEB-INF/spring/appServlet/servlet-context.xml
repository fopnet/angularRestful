<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <!--<resources mapping="/resources/**"  location="/resources/" />-->

    <!-- Enables the Spring MVC @Controller programming model -->
    <context:annotation-config/>
    <mvc:annotation-driven />

    <context:component-scan base-package="ngdemo.web,ngdemo.service,ngdemo.repositories" >
    </context:component-scan>


    <!--<context:component-scan base-package=""  />-->
    <!--<context:component-scan base-package="br.com.petrobras.gip.*" use-default-filters="false"   />-->
    <!--To enable @RequestMapping process on type level and method level-->

    <bean id="userDAO" class="ngdemo.repositories.impl.mock.UserMockRepositoryImpl" />
    <bean id="dummyRepository" class="ngdemo.repositories.impl.mock.DummyMockRepositoryImpl" />

    <bean id="dummyService" class="ngdemo.service.impl.DummyServiceImpl" >
        <constructor-arg ref="dummyRepository"/>
    </bean>

    <bean id="userService" class="ngdemo.service.impl.UserServiceImpl" >
        <constructor-arg ref="userDAO"/>
    </bean>

    <mvc:default-servlet-handler/>
    <mvc:resources mapping="/app/**" location="/app/" />
    <mvc:resources mapping="/web/**" location="/" />
    <mvc:resources mapping="/web/users/**" location="/" />
    <mvc:resources mapping="/web/users/numberOfUsers/**" location="/" />

<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property email="prefix" value="/WEB-INF/spring/views/" />
        <beans:property email="suffix" value=".jsp" />
    </bean>
 -->

    <!-- Configure bean to convert JSON to POJO and vice versa  -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--  Spring authentication-->
<!--    <beans:import resource="spring-security.xml"/>-->

</beans>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- Importing DAO Beans ================================================================================================= -->

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--<property name="dialect" value="org.hibernate.dialect.FirebirdDialect"/>-->
        <property name="driverClassName" value="org.firebirdsql.jdbc.FBDriver" />
        <property name="url" value="jdbc:firebirdsql:localhost/3050:D:\Database\FireBird\medicalJounal.fdb?lc_ctype=UTF8" />
        <property name="username" value="admin" />
        <property name="password" value="admin" />
    </bean>

    <!--   <aop:config>
           <aop:advisor pointcut="execution(* vn.com.vhc.cbs.dao.*.*(..))"
                        advice-ref="txAdvice" />
       </aop:config>

       <tx:annotation-driven />
       <tx:advice id="txAdvice">
           <tx:attributes>
               <tx:method name="save*" />
               <tx:method name="update*" />
               <tx:method name="remove*" />
               <tx:method name="*" read-only="false" />
           </tx:attributes>
       </tx:advice>
   -->

    <!-- Hibernate settings =========================================================================== -->

    <!-- LocalSession Factory Bean ================================== -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" scope="singleton">
        <property name="packagesToScan" value="ngdemo.domain"/>
        <property name="dataSource" ref="dataSource"/>

        <!--
                <property name="mappingResources">
                    <list>
                        <value>product.hbm.xml</value>
                    </list>
                </property>
        -->
        <!--
                <property name="annotatedClasses">
                    <list>
                        <value>ngdemo.domain.User</value>
                        <value>ngdemo.domain.Profile</value>
                        <value>ngdemo.domain.Permission</value>
                        <value>ngdemo.domain.Subscription</value>
                        <value>ngdemo.domain.Journal</value>
                    </list>
                </property>
        -->

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.FirebirdDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="current_session_context_class">thread</prop>
                <!--<prop key="hibernate.connection.autocommit">true</prop>-->
                <prop key="hibernate.transaction.auto_close_session">true</prop>
                <!--<prop key="hibernate.connection.release_mode">auto</prop>-->
                <!--<prop key="hibernate.current_session_context_class">jta</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
            </props>
        </property>
    </bean>

    <!-- Transaction manager setupLocalSession Factory Bean ================================== -->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateManagedSession" value="false"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />
    <tx:advice id="txAdvice" transaction-manager="txManager" >
        <tx:attributes >
            <tx:method name="approve*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="update*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception" />

            <tx:method name="*" read-only="false" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

    <!--    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"/>
            <property name="rollbackOnCommitFailure" value="true"/>
        </bean>-->


    <!--    <bean id="persistenceExceptionTranslationPostProcessor"
              class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    -->
   <!-- <tx:annotation-driven transaction-manager="txManager" />
    <tx:advice id="txAdvice" transaction-manager="txManager" >
        <tx:attributes >
            <tx:method name="approve*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="update*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" read-only="false"
                       propagation="REQUIRED" rollback-for="java.lang.Exception" />

            <tx:method name="*" read-only="false" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>-->



    <!-- Mock Repositories Beans =================================================================================== -->

    <bean id="dummyRepository" class="ngdemo.repositories.impl.mock.DummyMockRepositoryImpl" scope="singleton"/>

    <!--
        <bean id="userDAO" class="ngdemo.repositories.impl.mock.UserMockRepositoryImpl" scope="singleton" factory-method="getInstance"/>

       <bean id="journalDAO" class="ngdemo.repositories.impl.mock.JournalMockRepositoryImpl" scope="singleton" factory-method="getInstance">
           <constructor-arg ref="userDAO"/>
       </bean>

       <bean id="subscriptionDAO" class="ngdemo.repositories.impl.mock.SubscriptionMockRepositoryImpl" scope="singleton" factory-method="getInstance">
           <constructor-arg ref="userDAO"/>
           <constructor-arg ref="journalDAO"/>
       </bean>
    -->

    <!-- Hibernate Repositories Beans ===================================================================================
-->
    <bean id="userDAO"
          scope="singleton"
          class="ngdemo.repositories.impl.hibernate.UserHibernateRepository">
        <constructor-arg name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="journalDAO"
          scope="singleton"
          class="ngdemo.repositories.impl.hibernate.JournalHibernateRepository" >
        <constructor-arg name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="subscriptionDAO"
          scope="singleton"
          class="ngdemo.repositories.impl.hibernate.SubscriptionHibernateRepository" >
        <constructor-arg name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--
        <bean name="openSessionInViewInterceptor"
              class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory">
                <ref bean="sessionFactory" />
            </property>
        </bean>
    -->

    <!-- Services ================================================================================================= -->
    <bean id="subscriptionService" class="ngdemo.service.impl.SubscriptionServiceImpl" >
        <constructor-arg name="journalRepository" ref="journalDAO"/>
        <constructor-arg name="subscriptionRepository" ref="subscriptionDAO"/>
    </bean>

    <bean id="journalService" class="ngdemo.service.impl.JournalServiceImpl" >
        <constructor-arg ref="journalDAO" />
    </bean>

    <bean id="dummyService" class="ngdemo.service.impl.DummyServiceImpl" >
        <constructor-arg ref="dummyRepository"/>
    </bean>

    <bean id="userService" class="ngdemo.service.impl.UserServiceImpl" >
        <constructor-arg ref="userDAO"/>
    </bean>

</beans>